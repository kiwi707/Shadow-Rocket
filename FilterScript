let customCharStart = "◎";
let customCharEnd = "ᵀᶻ";

const keywordsToNames = {
    "美|西雅图": "🇺🇸US",
    "港": "🇭🇰HK",
    "新": "🇸🇬SG",
    "台": "🇨🇳TW",
    "日|东京": "🇯🇵JP",
    "韩国": "🇰🇷KR",
    "土耳其": "🇹🇷TR",
    "爱尔兰": "🇮🇪IRL",
    "澳|AU": "🇦🇺AU",
    "法国|Paris|FR|巴黎": "🇫🇷FRA",
    "SE|瑞典": "🇸🇪SE",
    "德国|DE": "🇩🇪DE",
    "英国|GB": "🇬🇧GB",
    "IN|印度": "🇮🇳IN",
    "加拿大|CA": "🇨🇦CA",
};

const filterKeywords = [
    "广告", "过期", "无效", "测试", "备用", "官网", "账号", "有效期", "群", "到期", "刷新", "剩余", "电报", "会员", 
    "解锁", "流量", "超时", "订阅", "佣金", "免翻", "节点", "下载", "更新", "点外", "重置", "免流", 
    "Days", "Date", "Expire", "Premium", "建议", "免费"
];

const skipKeywords = ["想要保留的关键词1","想要保留的关键词2"];

for (const filter of filterKeywords) {
    if (new RegExp(filter, 'i').test($server.title)) return false;
}

let preservedParts = [], titleWithoutSkipKeywords = $server.title;

for (const skip of skipKeywords) {
    const match = $server.title.match(new RegExp(skip, 'i'));
    if (match) {
        preservedParts.push(match[0]);
        titleWithoutSkipKeywords = titleWithoutSkipKeywords.replace(match[0], '');
    }
}

let newTitle = titleWithoutSkipKeywords;

for (const keyword in keywordsToNames) {
    if (new RegExp(keyword, 'i').test(newTitle)) {
        newTitle = keywordsToNames[keyword];
        break;
    }
}

newTitle = customCharStart + newTitle;

const map = globalThis.map || (globalThis.map = {});

if (!map[newTitle]) {
    map[newTitle] = 1;
} else {
    map[newTitle]++;
    newTitle = `${newTitle}-${map[newTitle]}`;
}

newTitle += customCharEnd;

if (preservedParts.length > 0) {
    newTitle += ' ' + preservedParts.join(' ');
}

$server.title = newTitle;

return true;